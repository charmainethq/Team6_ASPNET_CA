@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var product = ViewBag.product;
    var averageRating = ViewData["avgRtg"];
    var ratingCounts = ViewData["rtgCnts"];
    var reviewDetails = (List<ProductReview>)ViewData["rvDts"];
    
}
@inject IHttpContextAccessor HttpContextAccessor

@model Product



<html>

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/css/product.css">
</head>

<center>
    <body>

        <div class="product-card" style="padding-top: 100px">

            <img src="@product.ProductImage" alt="@product.Name" class="product-image">

            <div class="product-info" style="padding-left : 80px">
                <h3 class="product-name">@product.Name</h3>
                <p class="product-description">@product.Description</p>
                <p class="product-price">$@product.UnitPrice</p>
                </br>

                <form id="addToCartForm-@product.ProductId" method="post" action="@Url.Action("Details", "Cart")">
                    <input type="hidden" name="productId" value="@product.ProductId" />
                    <input type="hidden" id="quantity" name="quantity" value="1" />

                    <button class="button-18" type="submit" onclick="event.preventDefault();addToCart(@product.ProductId);"> Add to Cart</button>
                </form>

            </div>
        </div>

        <br />

        <div class="container">
            <h3 class="title">Product Reviews</h3>
            <br />

            <h6> Based on @ratingCounts reviews, the average rating is: </h6> <br />

            <div class="stars">
                @for (int i = 0; i < (int)averageRating; i++)
                {
                    <i class="fa fa-star checked" style="font-size:25px;color:gold;"></i>
                }
                @for (int i = (int)averageRating; i < 5; i++)
                {
                    <i class="fa fa-star checked" style="font-size:25px;color:lightgrey;"></i>
                }
            </div> <br />
            <h6> @averageRating out of 5 stars </h6>

            @*display the review details*@
            <hr style="border:1.5px solid #888888">

            <div class="ReviewDetails">
                <h4> Review Details: </h4> <br />
                @foreach (var reviewDetail in reviewDetails.Where(g => g.Rating.HasValue))
                {
                    <div>
                        <div>
                            @*display customer name*@
                            <div>
                                <h6>Customer Name: @reviewDetail.CustomerName</h6>

                                @*display invididual review star rating*@
                                <div>
                                    Rating:
                                    @for (int i = 0; i < (int)@reviewDetail.Rating; i++)
                                    {
                                        <i class="fa fa-star checked" style="font-size:15px;color:gold;"></i>
                                    }
                                    @for (int i = (int)@reviewDetail.Rating; i < 5; i++)
                                    {
                                        <i class="fa fa-star checked" style="font-size:15px;color:lightgrey;"></i>
                                    }
                                </div>
                            </div>

                            @*display individual review description*@
                            <p>Review: @reviewDetail.ReviewText</p>
                            <br />
                        </div>
                    </div>
                }
            </div>
        </div>
    </body>
</center>
</html>


<script>
    function addToCart(productId) {
        var quantity = 1;

        var form = document.getElementById('addToCartForm-' + productId);
        var formData = new FormData(form);

        console.log('Adding product to cart with ID: ' + productId);
        

        fetch(form.action, {
            method: form.method,
            body: formData
        })
            .then(response => {
                if (response.ok) {
                    // show success message
                    alert('Product added to cart successfully.');
                } else {
                    throw new Error('Error adding product to cart.');
                }
            })
            .catch(error => {
                // show error message
                alert(error.message);
            });
    }


</script>
